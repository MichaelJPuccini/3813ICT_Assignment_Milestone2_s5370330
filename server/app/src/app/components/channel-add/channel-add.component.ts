import { Component, Input, OnInit } from '@angular/core';
import { ActivatedRoute, Router, RouterModule } from '@angular/router';
import { FormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';

import { ChannelService } from '../../services/channel.service';
import { ToastService } from '../../services/toast.service';

@Component({
  selector: 'app-channel-add',
  standalone: true,
  imports: [FormsModule, CommonModule, RouterModule],
  templateUrl: './channel-add.component.html',
  styleUrl: './channel-add.component.css'
})
export class ChannelAddComponent implements OnInit {
  @Input() groupId: string = '';
  channelName: string = '';
  creatorId: string = '';
  errorMessage: string = '';

  constructor(
    private toastService: ToastService,
    private route: ActivatedRoute,
    private channelService: ChannelService,
    private router: Router
  ) {}

  ngOnInit(): void {
    // Set the creatorId to the current user's ID
    const userId = localStorage.getItem('userId');
    this.creatorId = userId || "";
  }

  add(): void {
    if (this.channelName.trim()) {
      const newChannel = {
        // _id: '', // This will be generated by the backend
        groupId: this.groupId,
        name: this.channelName,
        creatorId: this.creatorId,
        adminIds: [this.creatorId], // Initially, the creator is the admin
        userIds: [this.creatorId] // Initially, the creator is the only user
      };

      this.channelService.add(newChannel).subscribe({
        next: () => {
          this.toastService.add('New Group Created', 3000, 'success');
          this.router.navigate(['/groups', this.groupId]); // Navigate to the group page on successful addition
        },
        error: (error) => {
          console.error('Error adding channel', error);
          this.toastService.add('The channel was not created', 3000, 'error');
          this.errorMessage = 'Error adding channel. Please try again later.';
        }
      });
    } else {
      this.toastService.add('Channel name is required', 3000, 'error');
      this.errorMessage = 'Channel name is required.';
    }
  }
}
